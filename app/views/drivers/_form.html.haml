= form_for @driver do |f|
  - if @driver.errors.any? && @current_role_user.is_admin?
    #error_explanation
      %h2= "#{pluralize(@driver.errors.count, "error")} prohibited this driver from being saved:"
      %ul
        - @driver.errors.full_messages.each do |msg|
          %li= msg
  .row
    .col-md-6
      .form-group
        .row
          .col-md-4
            = f.label :fn
          .col-md-8
            = f.text_field :fn, class: 'form-control'
      = f.error_messages_for(:fn)
      .form-group
        .row
          .col-md-4
            = f.label :sn
          .col-md-8
            = f.text_field :sn, class: 'form-control'
      = f.error_messages_for(:sn)
      .form-group
        .row
          .col-md-4
            = f.label :ln
          .col-md-8
            = f.text_field :ln, class: 'form-control'
      = f.error_messages_for(:sn)
      .form-group
        .row
          .col-md-4
            = f.label :birthdate
          .col-md-8
            .input-group.date.datepicker
              = f.text_field :birthdate, value: lnil(f.object.birthdate), class: 'form-control'
              %span.input-group-addon
                %span.glyphicon.glyphicon-calendar
      = f.error_messages_for(:birthdate)
      .form-group
        .row
          .col-md-4
            = f.label :TIN
          .col-md-8
            = f.text_field :TIN, class: 'form-control'
      = f.error_messages_for(:TIN)
      .form-group
        .row
          .col-md-4
            = f.label :passport
          .col-md-8
            = f.text_field :passport, class: 'form-control'
      = f.error_messages_for(:passport)
    - if @current_role_user.present? and @current_role_user.is_admin?
      .col-md-6
        - if (!@driver.new_record?)
          = f.fields_for(:auto) do |a|
            = render('auto_form', a: a, new: false)
  - if @current_role_user.present? and @current_role_user.is_admin?
    .col-md-12.center
      - new_or_select = check_box_tag('new_or_select', 'true', false, data: { :size => 'auto', :animate => 'true', :'on-color' => 'success', :'off-color' => 'warning', :'on-text' => 'Создать', :'off-text' => 'Выбрать', :'label-text' => 'Автомобиль', :'indeterminate' => true} )
      - if (@driver.new_record? or !@driver.auto)
        = new_or_select
      - else
        .hidden
          = new_or_select
      = f.fields_for(:auto, Auto.new) do |a|
        #new_object_fields{:data => {:content => "#{render('auto_form', a: a, new: true)}"}}
        #select_object_field{:data => {:content => "#{render('auto_select', f: f)}"}}
  .col-md-6.col-md-offset-3
    .form-actions
      = f.submit nil, class: 'btn btn-primary'