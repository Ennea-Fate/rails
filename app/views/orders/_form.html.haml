= form_for @order do |f|
  - if @order.errors.any? && @current_role_user.is_admin?
    #error_explanation
      %h2= "#{pluralize(@order.errors.count, "error")} prohibited this order from being saved:"
      %ul
        - @order.errors.full_messages.each do |msg|
          %li= msg
          
  .row
    .col-md-6
      .form-group
        .row
          .col-md-4
            = f.label :date
          .col-md-8
            .input-group.date.datepicker
              = f.text_field :date, value: lnil(f.object.date), class: 'form-control'
              %span.input-group-addon
                %span.glyphicon.glyphicon-calendar
      = f.error_messages_for(:date, class: "bg-danger")
      .form-group
        .row
          .col-md-4
            = f.label :time
          .col-md-8
            .input-group.date.timepicker
              = f.text_field :time, class: 'form-control'
              %span.input-group-addon
                %span.glyphicon.glyphicon-time
      = f.error_messages_for(:time, class: "bg-danger")
      .form-group
        .row
          .col-md-4
            = f.label :from_adress
          .col-md-8
            = f.text_field :from_adress, class: 'form-control'
      = f.error_messages_for(:from_adress, class: "bg-danger")
      .form-group
        .row
          .col-md-4
            = f.label :to_adress
          .col-md-8
            = f.text_field :to_adress, class: 'form-control'
      = f.error_messages_for(:to_adress, class: "bg-danger")
      .form-group
        .row
          .col-md-4 
            = f.label :passangers_count
          .col-md-8
            = f.text_field :passangers_count, class: 'form-control'
      = f.error_messages_for(:passangers_count, class: "bg-danger")
      .form-group
        .row
          .col-md-4
            = f.label :lenght_of_the_route
          .col-md-8
            = f.text_field :lenght_of_the_route, class: 'form-control'
      = f.error_messages_for(:lenght_of_the_route, class: "bg-danger")
      .form-group
        .row
          .col-md-4
            = f.label :driver
          .col-md-8
            = select(:order, :driver_id, Driver.all.collect {|p| [ (p.fn + ' ' + p.sn + ' ' + p.ln), p.id ] }, { include_blank: true }, :data => {'style' => "btn-primary"}, :class => 'form-control',)
      = f.error_messages_for(:driver, class: "bg-danger" )
    - if @current_role_user.present? and @current_role_user.is_admin?
      .col-md-6
        - if (!@order.new_record?)
          = f.fields_for(:rate) do |r|
            = render('rate_form', r: r, f: f, new: false)
  - if @current_role_user.present? and @current_role_user.is_admin?
    .col-md-12.center
      - new_or_select = check_box_tag('new_or_select', 'true', false, data: { :size => 'auto', :animate => 'true', :'on-color' => 'success', :'off-color' => 'warning', :'on-text' => 'Создать', :'off-text' => 'Выбрать', :'label-text' => 'Тариф', :'indeterminate' => true} )
      - if (@order.new_record? or !@order.rate)
        = new_or_select
      - else
        .hidden
          = new_or_select
      = f.fields_for(:rate, Rate.new) do |r|
        #new_object_fields{:data => {:content => "#{render('rate_form', r: r, new: true)}"}}
        #select_object_field{:data => {:content => "#{render('rate_select', f: f)}"}}
  .col-md-6.col-md-offset-3
    .form-actions
      .btn-group
        = f.submit nil, class: 'btn btn-primary'
        %a{value: '', class: 'btn btn-primary  hidden',title: 'Невозможно удалить тариф используемый в других заказах!', data: {toggle: 'tooltip', animation: true, placement: 'bottom'}}
          %i{class: 'fa fa-question'}